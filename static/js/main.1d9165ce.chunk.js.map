{"version":3,"sources":["yams.jpg","questions.js","App.js","reportWebVitals.js","index.js"],"names":["questions","question","answers","correctAnswerIndex","App","props","onQuestionSelected","questionIndex","selectedIndex","setState","state","selectedAnswers","map","item","index","submit","submitted","calculateScore","score","i","length","toggleDarkMode","document","documentElement","classList","contains","remove","add","window","matchMedia","matches","Array","fill","undefined","className","onClick","this","src","yams","alt","React","Component","Question","answer","getButtonClass","handleClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1d9165ce.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/yams.c593bd39.jpg\";","const questions = [\n  {\n    question: \"1. What kind of food is a yam?\",\n    answers: [\n      \"Fruit\",\n      \"Vegetable\",\n      \"Mango\",\n      \"Juice\"\n    ],\n    correctAnswerIndex: 1\n  },\n  {\n    question: \"2. How many species of yams are found around the world?\",\n    answers: [\n      \"20\",\n      \"50\",\n      \"400\",\n      \"600\"\n    ],\n    correctAnswerIndex: 3\n  },\n  {\n    question: \"3. Which continent produces the most yams?\",\n    answers: [\n      \"Africa\",\n      \"Asia\",\n      \"North America\",\n      \"UC Irvine\"\n    ],\n    correctAnswerIndex: 0\n  },\n  {\n    question: \"4. Which is these is NOT a possible color of the inside of a yam?\",\n    answers: [\n      \"White\",\n      \"Orange\",\n      \"Yellow\",\n      \"Purple\"\n    ],\n    correctAnswerIndex: 1\n  },\n  {\n    question: \"5. What season are yams usually harvested in?\",\n    answers: [\n      \"Spring\",\n      \"Summer\",\n      \"Fall\",\n      \"Winter\"\n    ],\n    correctAnswerIndex: 2\n  },\n  {\n    question: \"6. Which vitamin are yams NOT a major source of?\",\n    answers: [\n      \"Vitamin A\",\n      \"Vitamin B\",\n      \"Vitamin C\",\n      \"Potassium\"\n    ],\n    correctAnswerIndex: 0\n  },\n  {\n    question: \"7. In Ghana, yams are traditionally served to celebrate what?\",\n    answers: [\n      \"AntAlmanac and Zotistics joining PeterPortal\",\n      \"Mars starting work at Cameo\",\n      \"Ryan stealing Patrick's Igloo\",\n      \"The arrival of a new baby\"\n    ],\n    correctAnswerIndex: 3\n  },\n  {\n    question: \"8. What food item are yams usually confused with?\",\n    answers: [\n      \"Bananas\",\n      \"Potatoes\",\n      \"Sweet Potatoes\",\n      \"Taro\"\n    ],\n    correctAnswerIndex: 2\n  },\n  {\n    question: \"9. For how long have people been cultivating yams?\",\n    answers: [\n      \"2,000 years\",\n      \"10,000 years\",\n      \"100,000 years\",\n      \"Since the start of time\"\n    ],\n    correctAnswerIndex: 1\n  },\n  {\n    question: \"10. Which is NOT a health benefit of yams?\",\n    answers: [\n      \"Heals skin diseases\",\n      \"Cures respiratory problems\",\n      \"Aids digestion\",\n      \"Improves eyesight\"\n    ],\n    correctAnswerIndex: 3\n  },\n];\n\nexport default questions;\n","import React from 'react';\nimport './App.scss';\nimport yams from './yams.jpg';\nimport questions from './questions';\n\n// our state\n// selectedAnswers: array of 10 elements that each have the selected index\n// submitted: boolean\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedAnswers: new Array(10).fill(undefined),\n      submitted: false\n    };\n  }\n\n  onQuestionSelected = (questionIndex, selectedIndex) => {\n    this.setState(state => {\n      const selectedAnswers = state.selectedAnswers.map((item, index) => {\n        if (index == questionIndex) {\n          return selectedIndex;\n        }\n        else {\n          return item;\n        }\n      });\n      return { selectedAnswers: selectedAnswers };\n    });\n  }\n\n  submit = () => {\n    this.setState({ submitted: true });\n  }\n\n  calculateScore = () => {\n    let score = 0;\n    for (var i = 0; i < this.state.selectedAnswers.length; i++) {\n      if (this.state.selectedAnswers[i] == questions[i].correctAnswerIndex) {\n        score++;\n      }\n    }\n    return score;\n  }\n\n  toggleDarkMode = () => {\n    if (document.documentElement.classList.contains('dark')) {\n      // The user has manually selected dark mode\n      document.documentElement.classList.remove('dark');\n      document.documentElement.classList.add('light');\n    }\n    else if (document.documentElement.classList.contains('light')) {\n      // The user has manually selected light mode\n      document.documentElement.classList.add('dark');\n      document.documentElement.classList.remove('light');\n    }\n    else {\n      // The user hasn't configured light or dark mode\n      // and they're just using their system settings\n      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        // the user's system settings are dark mode\n        document.documentElement.classList.add('light');\n      }\n      else {\n        document.documentElement.classList.add('dark');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h2>How well do you know about</h2>\n          <h1>YAMS?</h1>\n          <h2>By Ryam</h2>\n        </div>\n        {\n          // Clicking on the image toggles between dark and light mode.\n          // There are other ways to accomplish this too such as with an\n          // on/off toggle switch or a menu item, but hey who doesn't like\n          // an Easter egg?\n        }\n        <img onClick={this.toggleDarkMode} className=\"yam-image\" src={yams} alt='An image of yams by ryam'/>\n        <div className=\"questions\">\n          { questions.map((question, index) =>\n              <Question\n                key={ index }\n                questionIndex={ index }\n                question={ question.question }\n                answers={ question.answers }\n                correctAnswerIndex={ question.correctAnswerIndex }\n                onQuestionSelected={ this.onQuestionSelected }\n                submitted={ this.state.submitted }\n              />\n          )}\n        </div>\n        <div className=\"results\">\n          <button onClick={this.submit}>{this.state.submitted ? `${this.calculateScore()}/10 correct!` : \"How'd I do?\"}</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n// our props\n// question: string\n// answers: [string, string, string, string]\n\n// our state\n// selectedIndex: integer from 0 to 3 OR undefined\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { selectedIndex: undefined };\n  }\n\n  getButtonClass(index) {\n    if (this.props.submitted) {\n      if (this.props.correctAnswerIndex == index) {\n        return 'correct';\n      }\n      else if (this.state.selectedIndex == index) {\n        return 'incorrect';\n      }\n    }\n    else if (this.state.selectedIndex == index) {\n      return 'selected';\n    }\n    return '';\n  }\n\n  handleClick(index) {\n    this.setState({ selectedIndex: index });\n    this.props.onQuestionSelected(this.props.questionIndex, index);\n  }\n\n  render() {\n    return (\n      <div className=\"Question\">\n        <h3>{ this.props.question }</h3>\n        <div className=\"row\">\n          { this.props.answers.map((answer, index) =>\n            <button\n              key={ index }\n              className={this.getButtonClass(index)}\n              onClick={ () => this.handleClick(index) }\n            >{ answer }</button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}